{"version":3,"sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","App.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reduser.js","redux/store.js","index.js"],"names":["FilterInput","styled","label","Filter","filter","onChangeFilter","type","name","value","onChange","pattern","title","ButtonStyled","button","Contact","id","number","deleteContact","onClick","ListStyled","ul","ContactList","contacts","contact","toLowerCase","includes","map","FormStyled","form","ContactForm","addNewContact","useState","setName","setNumber","handleChange","e","target","onSubmit","preventDefault","newContact","nanoid","required","App","setContacts","setFilter","useEffect","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","some","toast","error","prevState","success","idBtn","addContact","createAction","removeContact","createReducer","actions","state","payload","_","combineReducers","store","configureStore","reducer","contactsReduser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6b1e894.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const FilterInput = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 250px;\r\n`;\r\n","import { FilterInput } from './Filter.styled';\r\n\r\nexport default function Filter({ filter, onChangeFilter }) {\r\n  return (\r\n    <>\r\n      <FilterInput>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={onChangeFilter}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        />\r\n      </FilterInput>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ButtonStyled = styled.button`\r\n  margin-left: 25px;\r\n  :hover,\r\n  :focus {\r\n    background-color: blue;\r\n    color: white;\r\n  }\r\n`;\r\n","import { ButtonStyled } from './Contact.styled';\r\n\r\nexport default function Contact({ id, name, number, deleteContact }) {\r\n  return (\r\n    <>\r\n      <span>\r\n        {name} : {number}\r\n      </span>\r\n      <ButtonStyled type=\"button\" onClick={() => deleteContact(id)}>\r\n        Delete\r\n      </ButtonStyled>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ListStyled = styled.ul`\r\n  & li {\r\n    margin-top: 7px;\r\n  }\r\n`;\r\n","import Contact from '../Contact/Contact';\r\nimport { ListStyled } from './ContactList.styled';\r\n\r\nexport default function ContactList({ contacts, filter, deleteContact }) {\r\n  return (\r\n    <>\r\n      <section>\r\n        <ListStyled>\r\n          {contacts\r\n            .filter(contact =>\r\n              contact.name.toLowerCase().includes(filter.toLowerCase())\r\n            )\r\n            .map(({ id, name, number }) => (\r\n              <li key={id}>\r\n                <Contact\r\n                  id={id}\r\n                  name={name}\r\n                  number={number}\r\n                  deleteContact={deleteContact}\r\n                />\r\n              </li>\r\n            ))}\r\n        </ListStyled>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const FormStyled = styled.form`\r\n  /* display: flex;\r\n  flex-direction: column; */\r\n  padding: 20px;\r\n  width: 300px;\r\n  border: 1px solid black;\r\n\r\n  & label {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 20px;\r\n  }\r\n  & button {\r\n    margin-top: 20px;\r\n    :hover,\r\n    :focus {\r\n      background-color: blue;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { FormStyled } from './ContactForm.styled';\r\n\r\nexport default function ContactForm({ addNewContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n    const newContact = {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    };\r\n    addNewContact(newContact);\r\n    setNumber('');\r\n    setName('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormStyled onSubmit={submitForm}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={handleChange}\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </FormStyled>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parseContacts = JSON.parse(contacts);\r\n    if (parseContacts) {\r\n      setContacts(parseContacts);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addNewContact = newContact => {\r\n    if (\r\n      contacts.some(\r\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      toast.error('contact with such name already exists');\r\n      return;\r\n    }\r\n    setContacts(prevState => [newContact, ...prevState]);\r\n    toast.success('contact added');\r\n  };\r\n\r\n  const deleteContact = idBtn => {\r\n    setContacts(prevState => prevState.filter(contact => contact.id !== idBtn));\r\n    toast.success('delete is complete');\r\n  };\r\n\r\n  const handleChangeFilter = e => {\r\n    const value = e.target.value;\r\n    setFilter(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <h1>Phonebook</h1>\r\n      <ContactForm addNewContact={addNewContact} />\r\n      <h2>Contacts</h2>\r\n      <Filter filter={filter} onChangeFilter={handleChangeFilter} />\r\n      <ContactList\r\n        contacts={contacts}\r\n        filter={filter}\r\n        deleteContact={deleteContact}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createAction } from \"@reduxjs/toolkit\"\r\n\r\nconst addContact = createAction('contacts/add');\r\nconst removeContact = createAction('contacts/delete');\r\nconst filter = createAction('contacts/filter')\r\n\r\nexport default {addContact, removeContact, filter}","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"@reduxjs/toolkit\";\r\nimport actions from './contacts-actions'\r\n\r\nconst contacts = createReducer([],{\r\n    [actions.addContact]:(state, {payload})=>[payload, ...state],\r\n    [actions.removeContact]:(state, {payload})=>state.filter(({id})=>id!==payload)\r\n})\r\n\r\nconst filter = createReducer('',{\r\n    [actions.filter]:(_, {payload})=>payload\r\n})\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter\r\n});","import { configureStore } from '@reduxjs/toolkit'\r\nimport contactsReduser from './contacts/contacts-reduser'\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReduser,\r\n},\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(  \n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}